# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ASA # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3

# you can overwrite defaults here
  stage: ${env:SLS_USER}
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource: arn:aws:dynamodb:${self:provider.region}:*:*

# you can add packaging information here
package:
  include:
    - node_modules
    - functions
    - config.json
  exclude:
    - tests
    - asa-wit-app.zip
#  artifact: my-service-code.zip

functions:
  facebookLambda:
    handler: functions/fb-endpoint.facebookLambda
    timeout: 10
    events:
      - http:
          path: fb-webhook
          method: get
          integration: lambda
      - http:
          path: fb-webhook
          method: post
          integration: lambda
  cartRedirect:
    handler: functions/cart-redirect.cartRedirect
    timeout: 3
    events:
      - http: GET cart-redirect
#    you can add any of the following events
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic

# you can add CloudFormation resource templates here
resources:
  Resources:
    SessionsTable:
      Type: AWS::DynamoDB::Table
      DependsOn: SeachQueriesTable
      Properties:
        TableName: ASA-${opt:stage}-Sessions
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: sessionId
            AttributeType: N
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: sessionId-index
            KeySchema:
              - AttributeName: sessionId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    SeachQueriesTable:
      Type: AWS::DynamoDB::Table
      DependsOn: PurchasedItemsTable
      Properties:
        TableName: ASA-${opt:stage}-SearchQueries
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    PurchasedItemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
         TableName: ASA-${opt:stage}-PurchasedItems
         AttributeDefinitions:
           - AttributeName: uid
             AttributeType: S
           - AttributeName: date
             AttributeType: S
         KeySchema:
           - AttributeName: uid
             KeyType: HASH
           - AttributeName: date
             KeyType: RANGE
         ProvisionedThroughput:
           ReadCapacityUnits: 5
           WriteCapacityUnits: 5